name: 'DO image'
on:
  workflow_call:
    inputs:
      package_name:
        required: true
        type: string
      build_args:
        type: string
        required: false
    # secrets:
    # digital_ocean_accesstoken:
    #   required: true
    # build_args:
    #   required: false
jobs:
  build-image:
    runs-on: ubuntu-latest
    environment: ${{ startsWith(github.ref, 'refs/pull') && 'commit' || github.ref_name }}
    env:
      environment: ${{ startsWith(github.ref, 'refs/pull') && 'commit' || github.ref_name }}
    steps:
      - name: Checkout $GITHUB_REF
        uses: actions/checkout@v4
      - name: print
        run: echo '${{ env.environment}}'
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - id: gen-image-name
        env:
          name: '${{inputs.package_name}}'
        run: echo "image_name=${name/\_/-}" >> $GITHUB_OUTPUT
      # - uses: ./.github/workflows/do-init.yml
      - run: echo ${{steps.gen-image-name.outputs.image_name}}
      - name: Build ${{steps.gen-image-name.outputs.image_name}} image
        run: docker build ${{inputs.build_args}} --build-arg SUPABASE_ANON_KEY=${{secrets.SUPABASE_ANON_KEY}} --build-arg SUPABASE_SERVICE_KEY=${{ secrets.SUPABASE_SERVICE_KEY }} -t ${{vars.CONTAINER_REGISTRY_URL}}/${{vars.APP}}-${{env.environment}}/${{steps.gen-image-name.outputs.image_name}}:${{env.environment}}-$(echo $GITHUB_SHA | head -c7) -t ${{vars.CONTAINER_REGISTRY_URL}}/${{vars.APP}}-${{env.environment}}/${{steps.gen-image-name.outputs.image_name}}:latest -t ${{vars.CONTAINER_REGISTRY_URL}}/${{vars.APP}}-${{env.environment}}/${{steps.gen-image-name.outputs.image_name}}:${{env.environment}}-latest -t ${{vars.CONTAINER_REGISTRY_URL}}/${{vars.APP}}-${{env.environment}}/${{steps.gen-image-name.outputs.image_name}}:$(echo $GITHUB_SHA | head -c7) -f ./packages/${{inputs.package_name}}/Dockerfile .
      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 1200
      - name: Push ${{steps.gen-image-name.outputs.image_name}} image to DigitalOcean Container Registry
        run: docker push --all-tags ${{vars.CONTAINER_REGISTRY_URL}}/${{vars.APP}}-${{env.environment}}/${{steps.gen-image-name.outputs.image_name}}
