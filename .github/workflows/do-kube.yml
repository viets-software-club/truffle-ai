name: 'DO kube'
on:
  workflow_call:
    inputs:
      templates:
        type: string
        required: true
      template_args:
        type: string
        required: true
      delete_name:
        type: string
        required: false
    secrets:
      digital_ocean_accesstoken:
        required: true
jobs:
  delete-pod:
    if: inputs.delete_name
    runs-on: ubuntu-latest
    env:
      environment: ${{ startsWith(github.ref, 'refs/pull') && 'commit' || github.ref_name }}
    steps:
      - name: Checkout $GITHUB_REF
        uses: actions/checkout@v4
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.digital_ocean_accesstoken }}
      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{vars.DO_KUBE_CLUSTER_NAME}}
      - name: Delete
        run: kubectl delete cronjob --namespace=${{ env.environment }} -l name=${{inputs.delete_name}}
  deploy:
    needs: [delete-pod]
    strategy:
      matrix:
        template: ${{ fromJSON(inputs.templates) }}
    runs-on: ubuntu-latest
    environment: ${{ startsWith(github.ref, 'refs/pull') && 'commit' || github.ref_name }}
    env:
      environment: ${{ startsWith(github.ref, 'refs/pull') && 'commit' || github.ref_name }}
    steps:
      - name: Checkout $GITHUB_REF
        uses: actions/checkout@v4
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.digital_ocean_accesstoken }}
      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{vars.DO_KUBE_CLUSTER_NAME}}
      - name: Create .deployment dir
        run:  mkdir $GITHUB_WORKSPACE/.deployment
      - name: Build manifest
        run: >
          APP=${{vars.APP}}
          COMMIT_TAG=$(echo $GITHUB_SHA | head -c7)
          COMMIT_MESSAGE=$(git show -s --format=%s)
          CHANGE_CAUSE=$(echo "$COMMIT_TAG: $COMMIT_MESSAGE")
          PREFIX="${{env.environment}}${{(env.environment == 'commit' && '-$COMMIT_TAG') || ''}}"
          ENVIRONMENT=${{ env.environment }}
          NAMESPACE=${{ env.environment }}
          ${{inputs.template_args}} env envsubst < $GITHUB_WORKSPACE/config/kubernetes/templates/${{matrix.template}}.yml > $GITHUB_WORKSPACE/.deployment/${{matrix.template}}.yml
      - name: Deploy manifest
        run: kubectl apply -f $GITHUB_WORKSPACE/.deployment/${{matrix.template}}.yml
      - name: Verify deployment
        if: endsWith( matrix.template, '-deployment' )
        run: >
          COMMIT_TAG=$(echo $GITHUB_SHA | head -c7)
          kubectl rollout status --timeout 240s deployment/${{vars.APP}}-${{env.environment}}${{(env.environment == 'commit' && '-$(echo $GITHUB_SHA | head -c7)') || ''}}-${{matrix.template}} --namespace=${{ env.environment}}
      - name: Verify service
        if: endsWith( matrix.template, '-service' )
        run: >
          COMMIT_TAG=$(echo $GITHUB_SHA | head -c7)
          kubectl rollout status --timeout 240s service/${{vars.APP}}-${{env.environment}}${{(env.environment == 'commit' && '-$(echo $GITHUB_SHA | head -c7)') || ''}}-${{matrix.template}} --namespace=${{ env.environment}}
      - name: Verify ingress
        if: endsWith( matrix.template, '-ingress' )
        run: >
          COMMIT_TAG=$(echo $GITHUB_SHA | head -c7)
          kubectl rollout status --timeout 240s ingress/${{vars.APP}}-${{env.environment}}${{(env.environment == 'commit' && '-$(echo $GITHUB_SHA | head -c7)') || ''}}-${{matrix.template}} --namespace=${{ env.environment}}
      - name: Verify cronjob
        if: endsWith( matrix.template, '-cronjob' )
        run: >
          COMMIT_TAG=$(echo $GITHUB_SHA | head -c7)
          kubectl rollout status --timeout 240s cronjob/${{vars.APP}}-${{env.environment}}${{(env.environment == 'commit' && '-$(echo $GITHUB_SHA | head -c7)') || ''}}-${{matrix.template}} --namespace=${{ env.environment}}
      # - name: Build commit ingress manifest
      #   run: >
      #     APP=${{vars.APP}}
      #     COMMIT_TAG=$(echo $GITHUB_SHA | head -c7)
      #     COMMIT_MESSAGE=$(git show -s --format=%s)
      #     CHANGE_CAUSE=$(echo "$COMMIT_TAG: $COMMIT_MESSAGE")
      #     PREFIX="${{env.environment}}$((env.environment = 'commit' ? '-$COMMIT_TAG' : ''))"
      #     ENVIRONMENT=${{ env.environment }}
      #     NAMESPACE=${{ env.environment }}
      #     env envsubst < $GITHUB_WORKSPACE/config/kubernetes/deploy-ingress.commit.yml > $GITHUB_WORKSPACE/.deployment/deploy-ingress.commit.yml
      # - name: Deploy commit ingress manifest
      #   run: kubectl apply -f $GITHUB_WORKSPACE/.deployment/deploy-ingress.commit.yml
      # - name: Verify commit ingress deployment
      #   run: >
      #     PREFIX="${{env.environment}}${{(env.environment == 'commit' && '-$COMMIT_TAG') || ''}}"
      #     kubectl rollout status --timeout 240s ingress/${{vars.APP}}-$(echo $PREFIX)-virtual-host-ingress
