name: 'Plan Deployment'
on:
  pull_request:
    types:
      - synchronize
    branches: ['main', 'staging']
    paths: ['packages/**', 'config/**', '.github/workflows/**']
  push:
    branches: ['main', 'staging']
    paths: ['packages/**', 'config/**', '.github/workflows/**']
jobs:
  variables:
    name: 'Variables'
    environment: ${{ startsWith(github.ref, 'refs/pull') && 'commit' || github.ref_name }}
    runs-on: ubuntu-latest
    outputs:
      SUPABASE_URL: ${{ vars.SUPABASE_URL }}
      GRAPHQL_SERVER_URL: ${{ vars.GRAPHQL_SERVER_URL }}
      SUPABASE_GRAPHQL_URL: ${{ vars.SUPABASE_GRAPHQL_URL }}
      NEXT_PUBLIC_API_GRAPHQL_URL: ${{ vars.NEXT_PUBLIC_API_GRAPHQL_URL }}
    steps:
      - run: echo "Outputting variables for following jobs"
  image:
    name: 'Image'
    permissions:
      contents: read
      packages: write
    needs: variables
    strategy:
      matrix:
        PACKAGE_NAME: [ui, graphql-gateway, graphql-server, repo-job, preview-job]
        include:
          - PACKAGE_NAME: ui
            BUILD_ARGS: --build-arg SUPABASE_URL=${{needs.variables.outputs.SUPABASE_URL}} --build-arg API_GRAPHQL_URL=${{needs.variables.outputs.NEXT_PUBLIC_API_GRAPHQL_URL}}
          - PACKAGE_NAME: graphql-gateway
            BUILD_ARGS: --build-arg GRAPHQL_SERVER_URL=${{ needs.variables.outputs.GRAPHQL_SERVER_URL }} --build-arg SUPABASE_URL=${{ needs.variables.outputs.SUPABASE_URL }} --build-arg SUPABASE_GRAPHQL_URL=${{needs.variables.outputs.SUPABASE_GRAPHQL_URL}}
    uses: ./.github/workflows/ghcr-image.yml
    with:
      ENVIRONMENT: ${{ startsWith(github.ref, 'refs/pull') && 'commit' || github.ref_name }}
      PACKAGE_NAME: ${{matrix.PACKAGE_NAME}}
      BUILD_ARGS: ${{matrix.BUILD_ARGS}}
    secrets: inherit
  terraform-plan:
    name: 'Terraform Plan'
    permissions:
      contents: read
      pull-requests: write
    needs: image
    uses: ./.github/workflows/terraform-plan.yml
    with:
      ENVIRONMENT: ${{ startsWith(github.ref, 'refs/pull') && 'commit' || github.ref_name }}
    secrets:
      TF_API_TOKENL: ${{ secrets.TF_API_TOKEN }}
