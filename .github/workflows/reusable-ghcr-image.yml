name: 'DO image'
on:
  workflow_call:
    inputs:
      PACKAGE_NAME:
        required: true
        type: string
      GIT_COMMIT_TAG:
        type: string
        required: true
      BUILD_ARGS:
        type: string
        required: false
      IMAGE_DESCRIPTION:
        type: string
        required: false
      ENVIRONMENT:
        type: string
        required: true
      IMAGE_REPOSITORY:
        type: string
        required: true
      IMAGE_TAGS:
        type: string
        required: true
      VERs:
        type: string
        required: true
permissions:
  contents: read
  packages: write
jobs:
  ghcr-image:
    name: 'GitHub Container Registry'
    runs-on: ubuntu-latest
    environment: ${{ inputs.ENVIRONMENT }}
    env:
      CONTAINER_REGISTRY_DOMAIN: ghcr.io
      IMAGE_SOURCE: https://github.com/${{vars.ORG_NAME}}/${{vars.REPO_NAME}}
      IMAGE_LICENSE: MIT
      IMAGE_DESCRIPTION: ${{ inputs.IMAGE_DESCRIPTION || inputs.PACKAGE_NAME}}
      IMAGE_MAIN_REPOSITORY_URL: ghcr.io/${{vars.ORG_NAME}}/${{vars.REPO_NAME}}
    steps:
      - name: Checkout $GITHUB_REF
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.CONTAINER_REGISTRY_DOMAIN }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build image
        run: |
          DOCKER_BUILDKIT=1 docker build \
          ${{inputs.BUILD_ARGS}} \
          --build-arg SUPABASE_ANON_KEY=${{secrets.SUPABASE_ANON_KEY}} \
          --build-arg SUPABASE_SERVICE_KEY=${{ secrets.SUPABASE_SERVICE_KEY }} \
          --build-arg BUILDKIT_INLINE_CACHE=1 \
          $(for tag in "${{inputs.IMAGE_TAGS}}");
            do echo "-t ${{env.IMAGE_MAIN_REPOSITORY_URL}}/${{inputs.IMAGE_REPOSITORY}}/${{inputs.PACKAGE_NAME}}:$tag \";
          done;)
          -t ${{env.IMAGE_MAIN_REPOSITORY_URL}}/${{inputs.IMAGE_REPOSITORY}}/${{inputs.PACKAGE_NAME}}:$(echo "${{inputs.GIT_COMMIT_TAG}}" | head -c 7) \
          -t ${{env.IMAGE_MAIN_REPOSITORY_URL}}/${{inputs.IMAGE_REPOSITORY}}/${{inputs.PACKAGE_NAME}}:$(echo "${{inputs.GIT_COMMIT_TAG}}" | head -c 14) \
          -t ${{env.IMAGE_MAIN_REPOSITORY_URL}}/${{inputs.IMAGE_REPOSITORY}}/${{inputs.PACKAGE_NAME}}:${{inputs.GIT_COMMIT_TAG}} \
          -t ${{env.IMAGE_MAIN_REPOSITORY_URL}}/${{inputs.IMAGE_REPOSITORY}}/${{inputs.PACKAGE_NAME}}:latest \
          --label "org.opencontainers.image.source=${{env.IMAGE_SOURCE}}" \
          --label "org.opencontainers.image.description=${{env.IMAGE_DESCRIPTION}}" \
          --label "org.opencontainers.image.licenses=${{env.IMAGE_LICENSE}}" \
          -f ./packages/${{inputs.PACKAGE_NAME}}/Dockerfile .
      - name: Push image to ghcr
        run: docker push --all-tags ${{env.IMAGE_MAIN_REPOSITORY_URL}}/${{inputs.IMAGE_REPOSITORY}}/${{inputs.PACKAGE_NAME}}
