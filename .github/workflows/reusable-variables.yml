name: 'Variables'
on:
  workflow_call:
    inputs:
      REF_NAME:
        required: true
        type: string
    outputs:
      PUBLIC_SUPABASE_URL:
        value: ${{ jobs.variables.outputs.PUBLIC_SUPABASE_URL }}
      PUBLIC_SUPABASE_GRAPHQL_URL:
        value: ${{ jobs.variables.outputs.PUBLIC_SUPABASE_GRAPHQL_URL }}
      PUBLIC_GIT_SHA_PREFIXED_GATEWAY_URL:
        value: ${{ jobs.variables.outputs.PUBLIC_GIT_SHA_PREFIXED_GATEWAY_URL }}
      PUBLIC_PRODUCTION_GATEWAY_URL:
        value: ${{ jobs.variables.outputs.PUBLIC_PRODUCTION_GATEWAY_URL }}
      PUBLIC_UI_HOSTNAME:
        value: ${{ jobs.variables.outputs.PUBLIC_UI_HOSTNAME }}
      PUBLIC_UI_PORT:
        value: ${{ jobs.variables.outputs.PUBLIC_UI_PORT }}
      PUBLIC_SUPABASE_ANON_KEY:
        value: ${{ jobs.variables.outputs.PUBLIC_SUPABASE_ANON_KEY }}
      GIT_COMMIT_TAG_N7:
        value: ${{ jobs.variables.outputs.GIT_COMMIT_TAG_N7 }}
      GIT_COMMIT_TAG_N14:
        value: ${{ jobs.variables.outputs.GIT_COMMIT_TAG_N14 }}
      GIT_COMMIT_TAG:
        value: ${{ jobs.variables.outputs.GIT_COMMIT_TAG }}
      GIT_COMMIT_MESSAGE:
        value: ${{ jobs.variables.outputs.GIT_COMMIT_MESSAGE }}
      ENV:
        value: ${{ jobs.variables.outputs.ENV }}
      DATETIME:
        value: ${{ jobs.variables.outputs.DATETIME }}
jobs:
  variables:
    name: 'Variables'
    environment: ${{ (inputs.REF_NAME == 'main' && 'production') || (inputs.REF_NAME == 'staging' && 'staging') || 'commit' }}
    env:
      ENV: ${{ (inputs.REF_NAME == 'main' && 'production') || (inputs.REF_NAME == 'staging' && 'staging') || 'commit' }}
    runs-on: ubuntu-latest
    outputs:
      ENV: ${{ env.ENV }}
      PUBLIC_SUPABASE_URL: ${{ vars.PUBLIC_SUPABASE_URL }}
      PUBLIC_SUPABASE_GRAPHQL_URL: ${{ vars.PUBLIC_SUPABASE_GRAPHQL_URL }}
      PUBLIC_GIT_SHA_PREFIXED_GATEWAY_URL: ${{ format('https://{0}.{1}.{2}/api', steps.git_commit_tag.outputs.git_commit_tag, env.ENV, vars.DOMAIN) }}
      PUBLIC_PRODUCTION_GATEWAY_URL: ${{ format('https://{0}/api', vars.DOMAIN) }}
      PUBLIC_UI_HOSTNAME: ${{ vars.PUBLIC_UI_HOSTNAME }}
      PUBLIC_UI_PORT: ${{ vars.PUBLIC_UI_PORT }}
      PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.PUBLIC_SUPABASE_ANON_KEY }}
      GIT_COMMIT_TAG: ${{ steps.git_commit_tag.outputs.git_commit_tag }}
      GIT_COMMIT_TAG_N7: ${{ steps.git_commit_tag_n7.outputs.git_commit_tag_n7 }}
      GIT_COMMIT_TAG_N14: ${{ steps.git_commit_tag_n14.outputs.git_commit_tag_n14 }}
      GIT_COMMIT_MESSAGE: ${{ steps.git_commit_message.outputs.git_commit_message }}
      DATETIME: ${{steps.date_time_stamp.outputs.stamp}}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{github.event.pull_request.head.sha}}
          sparse-checkout: |
            .git
      - id: git_commit_tag
        run: if [[ -n "${{github.event.pull_request.head.sha}}" ]]; then echo "git_commit_tag=$(echo '${{github.event.pull_request.head.sha}}' )" >> "$GITHUB_OUTPUT"; else echo "git_commit_tag=${{github.sha}}" >> "$GITHUB_OUTPUT"; fi
      - id: git_commit_message
        run: if [[ -n "$(git log --format=%s -n 1 ${{github.event.pull_request.head.sha}})" ]]; then echo "git_commit_message=$(git log --format=%s -n 1 ${{github.event.pull_request.head.sha}})" >> "$GITHUB_OUTPUT"; else echo "git_commit_message=$(${{github.event.head_commit.message}})" >> "$GITHUB_OUTPUT"; fi
      - id: date_time_stamp
        run: echo "stamp=$(date +%Y%m%d%H%M)" >> "$GITHUB_OUTPUT";
      - id: git_commit_tag_n7
        run: echo "git_commit_tag_n7=$(echo "${{steps.git_commit_tag.outputs.git_commit_tag}}" | head -c 7)" >> "$GITHUB_OUTPUT";
      - id: git_commit_tag_n14
        run: echo "git_commit_tag_n14=$(echo "${{steps.git_commit_tag.outputs.git_commit_tag}}" | head -c 14)" >> "$GITHUB_OUTPUT"; echo $GITHUB_OUTPUT
          