name: Test & Build
on:
  push:
    branches: ['main', 'staging', 'commit']
  pull_request:
    branches: ['main', 'staging', 'commit']
jobs:
  build:
    runs-on: ubuntu-latest
    environment: ${{ ((github.event_name == 'pull_request' && github.head_ref || github.ref_name) == 'main' && 'production') || ((github.event_name == 'pull_request' && github.head_ref || github.ref_name) == 'staging' && 'staging') || 'commit' }}
    env:
      PUBLIC_SUPABASE_URL: ${{vars.PUBLIC_SUPABASE_URL}}
      PUBLIC_SUPABASE_GRAPHQL_URL: ${{vars.PUBLIC_SUPABASE_GRAPHQL_URL}}
      PUBLIC_GATEWAY_URL: ${{vars.PUBLIC_GATEWAY_URL}}
      PUBLIC_UI_HOSTNAME: ${{vars.PUBLIC_UI_HOSTNAME}}
      PUBLIC_UI_PORT: ${{vars.PUBLIC_UI_PORT}}
      PUBLIC_SUPABASE_ANON_KEY: ${{secrets.PUBLIC_SUPABASE_ANON_KEY}}
    strategy:
      matrix:
        node-version: [21.x]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Use Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'
      - name: Use Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      # - name: Use Rust
      #   run: |
      #     curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
      #     source $HOME/.cargo/env
      - name: Task install
        run: task install
      - name: Task test
        run: task test
      - name: Task Build
        env:
          NODE_ENV: production
          GO_ENV: production
        run: task build
