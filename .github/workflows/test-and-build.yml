# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs
name: Test & Build
on:
  push:
    branches: ["main", "staging", "commit"]
  pull_request:
    branches: ["main", "staging", "commit"]
env:
  SUPABASE_GRAPHQL_URL: ${{ vars.SUPABASE_GRAPHQL_URL }}
  GRAPHQL_GATEWAY_PORT: ${{ vars.GRAPHQL_GATEWAY_PORT }}
  GRAPHQL_SERVER_PORT: ${{ vars.GRAPHQL_SERVER_PORT }}
  GRAPHQL_SERVER_URL: ${{ vars.GRAPHQL_SERVER_URL }}
jobs:
  build:
    runs-on: ubuntu-latest
    environment: ${{ startsWith(github.ref, 'refs/pull') && 'commit' || github.ref_name }}
    strategy:
      matrix:
        node-version: [21.x]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: false
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install
      - name: Install Task
        uses: arduino/setup-task@v1
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install npm packages
        run: NODE_ENV=development pnpm i
      - name: Test
        run: task test
      - name: Build
        env:
          SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
          GRAPHQL_SERVER_URL: ${{ vars.GRAPHQL_SERVER_URL }}
          SUPABASE_GRAPHQL_URL: ${{ vars.SUPABASE_GRAPHQL_URL }}
          SUPABASE_URL: ${{ vars.SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
          NEXT_PUBLIC_SUPABASE_URL: ${{ vars.SUPABASE_URL }}
          GRAPHQL_URL: ${{ vars.GRAPHQL_URL }}
        run: NODE_ENV=production task build
